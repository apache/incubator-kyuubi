name: Style check
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# This GitHub workflow checks style & dependency issues.

on:
  pull_request:
    branches:
      - master
      - branch-*

jobs:
  linter:
    name: Style and Dependency check
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        profiles:
          - '-Ptpcds -Pspark-block-cleaner -Pkubernetes-deployment-it -Pspark-3.1 -Pspark-3.2'
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 8
      - name: Install
        run: >-
          build/mvn clean install -V -Pflink-provided,spark-provided -Dorg.slf4j.simpleLogger.defaultLogLevel=warn \
              -Dmaven.javadoc.skip=true -Drat.skip=true -Dscalastyle.skip=true -Dspotless.check.skip -DskipTests \
              -Pflink-provided,spark-provided \
              -pl kyuubi-ctl,kyuubi-server,kyuubi-assembly -am
      - name: Scalastyle with Maven
        run: build/mvn scalastyle:check ${{ matrix.profiles }}
      - name: Upload scalastyle report
        if: failure()
        run: for log in `find * -name "scalastyle-output.xml"`;  do echo "=========$log========="; grep "error" $log; done
      - name: JavaStyle with Maven
        run: build/mvn spotless:check ${{ matrix.profiles }}
      - name: Check dependency list
        run: build/dependency.sh
